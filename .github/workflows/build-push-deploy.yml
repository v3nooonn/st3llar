name: Build push and deploy to Amazon ECS

#run-name: ${{ github.actor }}'s image build and push

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  env-verify:
    name: environment verification
    environment: Production
    runs-on: ubuntu-latest
    steps:
      - name: differentiate environment verification
        run: |
          echo "Production environment variables, region: ${{ vars.PROD_AWS_REGION }}"
          echo "Production environment secrets, token:  ${{ secrets.PROD_TOKEN }}"

  build-push:
    name: Build&Push
    runs-on: ubuntu-latest
    environment: Develop

    outputs:
      aws_ecr_image_tag: ${{ steps.build-push-step.outputs.aws_ecr_image_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true
          registry-type: private

      - name: Build and push
        id: build-push-step
        env:
          AWS_ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          AWS_ECR_REPOSITORY: ${{ vars.AWS_ECR_REPOSITORY }}
        run: |
          export AWS_ECR_IMAGE_TAG=$AWS_ECR_REGISTRY/$AWS_ECR_REPOSITORY:$(git rev-parse --short HEAD)
          docker build -f ./supplier/build/Dockerfile -t $AWS_ECR_IMAGE_TAG ./supplier
          docker push $AWS_ECR_IMAGE_TAG
          echo "aws_ecr_image_tag=$AWS_ECR_IMAGE_TAG" >> "$GITHUB_OUTPUT"

  deploy:
    name: Deploy
    needs: build-push
    runs-on: ubuntu-latest
    environment: Develop
    env:
      AWS_ECR_IMAGE_TAG: ${{ needs.build-push.outputs.aws_ecr_image_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Render Amazon ECS task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs/task-defs-supplier.json
          container-name: ${{ vars.AWS_ECR_CONTAINER_NAME }}
          image: ${{ env.AWS_ECR_IMAGE_TAG }}

      - name: Deploy to Amazon ECS task definition
        id: deploy-task-def
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: ${{ vars.AWS_ECS_SERVICE }}
          cluster: ${{ vars.AWS_ECS_CLUSTER }}